Prática 2 - Grafos para navegação
Descrição:
(Só um membro do grupo - individual, dupla ou trio - deve enviar)

Nesta atividade, vamos explorar o conceito de árvores, envolvendo geração e busca, aplicando ao cenário de navegação de robô. Em anexo, montei um material sobre grafos de visibilidade. Só dá para entender os passos a seguir se você entender, ou usar como acompanhamento, o material anexado. 

A ideia deste trabalho é que vocês montem um projeto (devidamente hospedado em github, ou gitlab), na linguagem de sua preferência, que contemple os seguintes passos: 

1. Arquivos de mapa: arquivo de texto e imagem (de um desenho no inkscape ou algo assim) (1 pt)
2. Leitura do mapa (vértices) e criação do grafo de visibilidade (usar regra para definir arestas). Recebe arquivo, retorna um grafo (2 pts)
3. Implementar Kruskal ou Prim no grafo de visibilidade. Recebe um grafo, retorna uma árvore (3 pts)
4. Implementação da função verticeMaisProximo. Recebe uma posição e a árvore e retorna o vértice da árvore mais próximo do ponto (1 pt)
5. Implementação de algoritmo de busca na árvore. Recebe um vértice da posição inicial, um vértice da posição final e a árvore, retorna um caminho (1 pt)
6. Plotar o caminho gerado no mapa. (2 pts extra)
7. Instruções e organização do README, com prints de funcionamento (2 pts)

P.S.: O mapa é escolhido por vocês, mas tem que ter ao menos 3 obstáculos. Com isso, os testes de vértices iniciais e finais são escolhidos por vocês também

1, 2, 4 e 6 -> Larissa
3 e 5 -> Otávio
7 -> Ambos